on:
  push:
  pull_request:

jobs:
  phpcs:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: dom, curl, mbstring, zip, pcntl, intl
          coverage: none
      - run: composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
      - run: composer install --no-interaction --ignore-platform-reqs --no-scripts
      - run: vendor/bin/php-cs-fixer fix --using-cache=no --config=.php_cs.dist --dry-run

  tlint:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: dom, curl, mbstring, zip, pcntl, intl
          coverage: none
      - run: composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
      - run: composer install --no-interaction --ignore-platform-reqs --no-scripts
      - run: vendor/bin/tlint lint ./app --no-interaction -v

  phpmnd:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: dom, curl, mbstring, zip, pcntl, intl
          coverage: none
      - run: composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
      - run: composer install --no-interaction --ignore-platform-reqs --no-scripts
      - run: vendor/bin/phpmnd ./app --no-interaction

  phpunit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE: postgres
    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: 8.0
          extensions: dom, curl, mbstring, zip, pcntl, intl
          coverage: xdebug
      - run: composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
      - run: composer install --no-interaction --ignore-platform-reqs --no-scripts
      - run: vendor/bin/phpunit --coverage-html=.coverage --coverage-text
      - uses: actions/upload-artifact@v2
        with:
          name: Coverage
          path: ./.coverage
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Logs
          path: ./storage/logs

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs:
      - phpcs
      - tlint
      - phpmnd
      - enlightn
      - phpunit
    runs-on: ubuntu-latest
    timeout-minutes: 2
    environment:
      name: production
      url: https://opendor.me
    steps:
      - uses: appleboy/ssh-action@master
        env:
          SSH_ROOT: ${{ secrets.SSH_ROOT }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          envs: "SSH_ROOT"
          script: |
            cd $SSH_ROOT
            php artisan backup:run
            git pull origin main
            yarn install
            yarn production
            composer update --no-interaction --prefer-dist --optimize-autoloader --no-dev
            sudo -S service php8.0-fpm reload
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan event:cache
            php artisan migrate --force
            php artisan permission:cache-reset
            php artisan permission:ensure
            php artisan schedule-monitor:sync
            php artisan horizon:terminate
      - uses: srt32/uptime@master
        with:
          url-to-hit: "https://opendor.me"
          expected-statuses: "200"
      - uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "üöÄ Deployment finished for `${{ github.sha }}`"
      - uses: Ilshidur/action-discord@master
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "üí£Ô∏è Deployment failed for `${{ github.sha }}`"

  http-status:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs:
      - deploy
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: dom, curl, zip
          coverage: none
      - run: composer global require spatie/http-status-check
      - run: $(composer global config bin-dir --absolute)/http-status-check scan https://opendor.me --dont-crawl-external-links --concurrency=5

  mixed-content:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs:
      - deploy
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: dom, curl, zip
          coverage: none
      - run: composer global require spatie/mixed-content-scanner-cli
      - run: $(composer global config bin-dir --absolute)/mixed-content-scanner scan https://opendor.me --verify-ssl

  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    continue-on-error: true
    needs:
      - deploy
    steps:
      - uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            https://opendor.me
          uploadArtifacts: true

  alex:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    continue-on-error: true
    needs:
      - deploy
    steps:
      - run: yarn global add alex
      - run: curl -s https://opendor.me | $(yarn global bin)/alex --html --stdin

  zap-baseline:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true
    needs:
      - http-status
      - mixed-content
    steps:
      - uses: zaproxy/action-baseline@v0.4.0
        with:
          target: https://opendor.me

  sitemap:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    needs:
      - http-status
      - mixed-content
    steps:
      - uses: atymic/sitemap-ping-action@master
        with:
          sitemap-url: https://opendor.me/sitemap.xml
